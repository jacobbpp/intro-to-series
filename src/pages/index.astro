---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import fontsCSS from '../styles/fonts.js';
import '../styles/global.css';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
import readingTime from 'reading-time';

const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const base = import.meta.env.BASE_URL.replace(/\/?$/, '/');
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <style is:inline>{fontsCSS}</style>
  </head>
  <body>
    <Header />
    <main>
      <h1 style="text-align: center;">The Intro To Series</h1>
      <p style="text-align: center;">
        Bite-sized deep dives into modern tech.
      </p>

      {posts.length > 0 && (
        <section>
          <h2 style="text-align: center;">Latest Posts</h2>
          <ul class="grid-list">
            {posts.map((post) => {
              const stats = readingTime(post.body);
              return (
                <li>
                  <a href={`${base}blog/${post.id}/`}>
                    {post.data.heroImage && (
                      <Image
                        width={720}
                        height={360}
                        src={post.data.heroImage}
                        alt=""
                        sizes="(max-width: 720px) 100vw, 720px"
                      />
                    )}
                    <h4 class="title">{post.data.title}</h4>
                    <p class="meta">
                      <FormattedDate date={post.data.pubDate} /> Â· {stats.text}
                    </p>
                  </a>
                </li>
              );
            })}
          </ul>
        </section>
      )}
    </main>
    <Footer />
  </body>
</html>
